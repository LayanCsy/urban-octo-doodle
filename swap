import javafx.application.Application; 
import javafx.event.ActionEvent; 
import javafx.event.EventHandler; 
import javafx.geometry.Pos; 
import javafx.scene.Scene; 
import javafx.scene.control.Button; 
import javafx.scene.layout.BorderPane; 
import javafx.scene.layout.StackPane; 
import javafx.scene.paint.Color; 
import javafx.scene.shape.Rectangle; 
import javafx.stage.Stage; 
public class NewFXMain extends Application { 
    @Override 
    // Override the start method in the Application class 
    public void start(Stage primaryStage) { 
        
        StackPane stackPane = new StackPane(); 
        Rectangle rectangle = new Rectangle(30, 30, 30, 60); 
        rectangle.setFill(Color.WHITE); 
        rectangle.setStroke(Color.BLACK); 
        stackPane.getChildren().add(rectangle);
        
        // Create a button‚Äê Source of event 
        Button btRotate = new Button("Rotate"); 
        
        // Register the handler with the source 
         
        BorderPane pane = new BorderPane(); 
        pane.setCenter(stackPane); 
        pane.setBottom(btRotate); 
        BorderPane.setAlignment(btRotate, Pos.TOP_CENTER);
        
        // Create Rotate handler 
        RotateHandler rotateHandler = new RotateHandler(pane, btRotate,stackPane); 
        btRotate.setOnAction(rotateHandler);

        // Create a scene and place it in the stage 
        Scene scene = new Scene(pane, 200, 150); 
        primaryStage.setTitle("RotateRectangle"); // Set the stage title 
        primaryStage.setScene(scene); // Place the scene in the stage 
        primaryStage.show(); // Display the stage 
    } 
    /** 
     * The main method is only needed for the IDE with limited JavaFX support. 
     * Not needed for running from the command line. 
     */ 
    public static void main(String[] args) { 
        launch(args); 
    } 
} 
class RotateHandler implements EventHandler<ActionEvent> { 
    BorderPane pane; 
    Button btRotate;
    StackPane stackPane;
    public RotateHandler(BorderPane pane, Button btRotate, StackPane stackPane) { 
        this.pane = pane; 
        this.btRotate = btRotate; 
        this.stackPane = stackPane;
    } 
    @Override 
    public void handle(ActionEvent event) { 
        pane.setCenter(btRotate); 
        pane.setBottom(stackPane);
        BorderPane.setAlignment(stackPane, Pos.TOP_CENTER);

    } 
}
