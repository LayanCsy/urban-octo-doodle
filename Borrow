import java.io.IOException;
import java.util.Date;

public class Borrow {

    //private Book currentBook;
    private String bookName;
    private String bookAuther;
    private int quantity;
    private Date borrowingDate;
    private Book book2;

    public Borrow(Book book) throws IOException {

        this.bookName = book.getBookName();
        this.bookAuther = book.getA();
        this.quantity = book.getQuantity();
        this.borrowingDate = new Date();
    }

    // to borrow book
    public String borrowBook() throws IOException {

        //to check if the user iligable to borrow 
        for (int i = 0; i <= 2; i++) {
            if ((User.vaildUser.getBorrowedBooks()[i]) != null) {
                if (equals((User.vaildUser.getBorrowedBooks()[i].bookName))) {
                    return "you have already borrowed \"" + bookName + "\".";
                }
            } else if (quantity <= 0) {
                return "You can't borrow \"" + bookName + "\" .\nit's out of stock.";
            } else {
                User.vaildUser.getBorrowedBooks()[i] = this;
                book2.removeBook(bookName);
                return "you have borrowed \"" + bookName + "\" successfully.";
            }
        }//end for loop
        return "you can't borrow \"" + bookName + "\"\nyou have reached maximum capacity.";
    }//end borrowBook

    //to return book
    public String returnBook() throws IOException {
        //to check if the user borrowed the book

        for (int i = 0; i <= 2; i++) {
            if (equals((User.vaildUser.getBorrowedBooks()[i].bookName))) {
                User.vaildUser.getBorrowedBooks()[i] = null;
                book2.addBook(bookName);
                return "you have returned \"" + bookName + "\" successfully.";
            }
        }//end for loop
        return "you didn't borrow \"" + bookName + "\".";
    }//end returnBook

    public Date getBorrowingDate() {
        return borrowingDate;
    }

    @Override
    public boolean equals(Object o) {
        return bookName == o;
    }

    @Override
    public String toString() {
        return "";
    }
}//end Borrow
